{"version":3,"sources":["components/modal/Modal.js","components/loader/SkenlentalLoader.js","components/search/Search.js","components/redux/fetchDataActions.js","components/redux/types.js","App.js","components/redux/fetchDataReducer.js","components/redux/store.js","index.js"],"names":["Modal","closeModalHandler","modal","showModal","className","onClick","alt","alt_description","src","urls","raw","user","name","location","SkelentalLoader","useState","arr","map","el","key","initialModalData","id","connect","state","data","modalData","dispatch","searchItem","setSearchTerm","setModal","setShowModal","isFetching","type","placeholder","onKeyPress","e","target","value","q","url","process","fetch","then","res","ok","json","Error","statusText","fetchedData","results","payload","catch","error","massage","fetchDataAction","length","item","modalIfor","slice","filter","i","showModalHandle","err","App","initialState","fetchDataReducer","action","allReducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.02ec4a3a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./modal.css\"\r\n\r\nfunction Modal({ closeModalHandler, modal, showModal }) {\r\n  return (\r\n    <div className={`modal-overlay ${showModal && \"modalActive\"}`}>\r\n      <div className=\"modal\">\r\n        <div\r\n          className=\"modal__closeBtn\"\r\n          onClick={() => {\r\n            closeModalHandler();\r\n          }}\r\n        >\r\n          &times;\r\n        </div>\r\n        <div className=\"modal__body\">\r\n          <img\r\n            className=\"modal__body__img\"\r\n            alt={modal[0].alt_description}\r\n            src={modal[0].urls.raw}\r\n          />\r\n\r\n          <div className=\"modal__body__text\">\r\n            <p className=\"auto-name\">{modal[0].user.name}</p>\r\n            <p className=\"auto-location\">{modal[0].user.location}</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport \"./skelental-loader.css\";\r\n\r\nfunction SkelentalLoader() {\r\n  const [arr] = useState([1, 2, 3, 4, 5, 6, 7, 8, 9]);\r\n  return (\r\n    <div className=\"loader-cards\">\r\n      {arr.map((el) => (\r\n        <div className=\"loader-card animate\" key={el}>\r\n          <div className=\"loader-card_body\">\r\n          <div className=\"text-title animate\"></div>\r\n          <div className=\"text-location animate\"></div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SkelentalLoader;","import React, { useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Modal from \"../modal/Modal\";\r\nimport SkelentalLoader from \"../loader/SkenlentalLoader\";\r\nimport { fetchDataAction } from \"../redux/fetchDataActions\";\r\nimport \"./search.css\";\r\n\r\nconst initialModalData = [\r\n  {\r\n    id: 0,\r\n    alt_description: \"\",\r\n    user: {\r\n      name: \"\",\r\n      location: null,\r\n    },\r\n    urls: { raw: \"\" },\r\n  },\r\n];\r\n\r\nfunction Search({ dispatch, data }) {\r\n  const [searchItem, setSearchTerm] = useState(\"\");\r\n  const [modal, setModal] = useState(initialModalData);\r\n  const [showModal, setShowModal] = useState(false);\r\n  /*   const [searchParam, setsearchParam] = useState(\"\"); */\r\n\r\n  const showModalHandle = (id) => {\r\n    let info = data.data.slice();\r\n    let modalIfor = info.filter((item, i) => {\r\n      return item.id === id;\r\n    });\r\n\r\n    setModal(modalIfor);\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const closeModalHandler = () => {\r\n    setModal(initialModalData);\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  const getInputValueHandler = (e) => {\r\n    let address = \"https://api.unsplash.com/search/photos?query=\";\r\n    let apiAccessKey=process.env.REACT_APP_apiAccessKey;\r\n   \r\n    if (e.target.value !== \"\" && e.key === \"Enter\") {\r\n      let q = e.target.value;\r\n      let url = `${address}${q}${apiAccessKey}`;\r\n      dispatch(fetchDataAction(url));\r\n      setSearchTerm(q);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"search-bar-cont\">\r\n        <div\r\n          className={`search-bar-cont__search-bar ${data.isFetching && \"hide\"}`}\r\n        >\r\n          <span className=\"search-bar-cont__search-icon\"></span>\r\n          <input\r\n            type=\"search\"\r\n            placeholder=\"Search for photo\"\r\n            onKeyPress={getInputValueHandler}\r\n            className=\"search-bar-cont__input-field\"\r\n          />\r\n        </div>\r\n\r\n        <div className={`searching-for ${data.isFetching && \"show\"}`}>\r\n          <span>Searching Results for</span>\r\n          <span>{`\"${searchItem}\"`}</span>\r\n        </div>\r\n      </div>\r\n      <Modal\r\n        modal={modal}\r\n        showModal={showModal}\r\n        closeModalHandler={closeModalHandler}\r\n      />\r\n\r\n      {data.isFetching ? (\r\n        <div className=\"skelental-loader\">\r\n          <SkelentalLoader />\r\n        </div>\r\n      ) : (\r\n        <div className=\"card-list\">\r\n          {data.data.length > 0 &&\r\n            data.data.map((item) => {\r\n              return (\r\n                <div className=\"card\" key={item.id}>\r\n                  <img\r\n                    className=\"card-photo\"\r\n                    src={item.urls.raw}\r\n                    alt={item.alt_description}\r\n                    onClick={() => {\r\n                      showModalHandle(item.id);\r\n                    }}\r\n                  />\r\n\r\n                  <div className=\"card-text\">\r\n                    <p className=\"card-auto-name\">{item.user.name}</p>\r\n                    <p className=\"card-auto-location\">{item.user.location}</p>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n        </div>\r\n      )}\r\n      {data.err && data.data.length === 0 && <div>{data.err}</div>}\r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    data: state.data,\r\n    modalData: state.modalData,\r\n  };\r\n};\r\nexport default connect(mapStateToProps)(Search);\r\n\r\n","import { IS_FETCHING, IS_AVAILABLE, IS_NOT_AVAILABLE } from \"./types\";\r\n\r\nexport const fetchDataAction = (url) => {\r\n  return (dispatch) => {\r\n    //Add loader\r\n    dispatch({\r\n      type: IS_FETCHING,\r\n    });\r\n\r\n    fetch(url)\r\n      .then((res) => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        } else {\r\n          throw Error(res.statusText);\r\n        }\r\n      })\r\n      .then((data) => {\r\n        let fetchedData = data.results; // is an array of objects\r\n        //remove loader\r\n        dispatch({\r\n          type: IS_AVAILABLE,\r\n          payload: fetchedData,\r\n        });\r\n      })\r\n      .catch((error) => {\r\n        //remove loader\r\n        dispatch({\r\n          type: IS_NOT_AVAILABLE,\r\n          payload: error.massage,\r\n        });\r\n      });\r\n  };\r\n};\r\n","export const IS_FETCHING = \"IS_FETCHING\";\r\nexport const IS_AVAILABLE = \"IS_AVAILABLE\";\r\nexport const IS_NOT_AVAILABLE = \"IS_NOT_AVAILABLE\";\r\n\r\n","import React from \"react\";\n import Search from \"./components/search/Search\";\nimport \"./app.css\";\n\n\nfunction App() {\n \n  return (\n    <div className=\"App\">\n      <Search /> \n    </div>\n  );\n}\n\nexport default App;\n\n","import { IS_FETCHING, IS_AVAILABLE, IS_NOT_AVAILABLE } from \"./types\";\r\nconst initialState = { isFetching: false, data: [], err: \"\" };\r\n\r\nconst fetchDataReducer = (state = initialState, action) => {\r\n \r\n  switch (action.type) {\r\n    case IS_FETCHING:\r\n      return { ...state, isFetching: true };\r\n    case IS_AVAILABLE:\r\n      return { isFetching: false, err: \"\", data: action.payload };\r\n    case IS_NOT_AVAILABLE:\r\n      return { ...state, err: action.payload };\r\n    default:\r\n      return { ...state, isFetching: false };\r\n  }\r\n};\r\nexport default fetchDataReducer;\r\n\r\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport fetchDataReducer from \"./fetchDataReducer\";\r\n\r\nlet allReducer = combineReducers({\r\n  data: fetchDataReducer,\r\n});\r\n\r\nconst store = createStore(\r\n  allReducer,\r\n  composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport {Provider} from \"react-redux\";\n//import store from \"./redux/store\";\nimport store from \"./components/redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}